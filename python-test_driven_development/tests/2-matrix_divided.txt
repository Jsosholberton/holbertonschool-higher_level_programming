The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing method:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Test for 'normal' runnig.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[5, 10, 15], [24, 32, 4]], 2)
    [[2.5, 5.0, 7.5], [12.0, 16.0, 2.0]]

    >>> matrix_divided([[10, 10, 10], [10, 10, 10]], 10)
    [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]]

    >>> matrix_divided([[10.2, 42.5, 35.5, -106.6], [28.5, -45.6, 99.9, 106.9], [1, 1, 1, -65]], 0.5)
    [[20.4, 85.0, 71.0, -213.2], [57.0, -91.2, 199.8, 213.8], [2.0, 2.0, 2.0, -130.0]]

Test for not int or float data.

    >>> matrix_divided([[25, "h", 45, 32], [95, "k", "9", "o"]], 10)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[h, l, m], [k, l, j]], z)
    Traceback (most recent call last):
    NameError: name 'h' is not defined
    
    >>> matrix_divided([["hello", "c", "is fun"], ["hello", "python", "is fun"]], 6)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[5, 3, 2], [14, 40, 10]], "divide")
    Traceback (most recent call last):
    TypeError: div must be a number

Test for zero cases.

    >>> matrix_divided([[5, 3, 2], [14, 40, 10]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[-10, -25, 52.5], [15.3, 85.5]], -0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[0, 0, 0], [0, 0, 0]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[0, 0, 0], [0, 0, 0]], 1)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test for empty matrix

    >>> matrix_divided([[], []], 15)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([15], 10)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[], [1]], 10)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test the matrix must have the same size

    >>> matrix_divided([[1, 10, 3], [0, 4.5]], 0.9)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
